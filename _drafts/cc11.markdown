---
layout: post
title: C++11!
---

These things make me excited to program in C++ again (which I already do for a living).

## [auto](http://www.stroustrup.com/C++11FAQ.html#auto)

```c++
/* C++98/03 */

// Pretend the vector has stuff in it.
vector<int> ents;

for (vector<int>::iterator iter = ents.begin(); iter != ents.end(); ++iter) {
    ++(*iter);
}
```
```c++
/* C++11 */

// Pretend the vector has stuff in it. (although you won't have to with initializer lists...)
vector<int> ents;

for (auto iter = ents.begin(); iter != ents.end(); ++iter) {
    ++(*iter);
}
```

## [foreach](http://www.stroustrup.com/C++11FAQ.html#for)

```c++
/* C++98/03 */

// Keep pretending.
vector<int> ents;

for (vector<int>::iterator iter = ents.begin(); iter != ents.end(); ++iter) {
    ++(*iter);
}
```
```c++
/* C++11 */

// Keep pretending.
vector<int> ents;

for (int &i : ents) {
    ++i;
}

// Or, you could auto that int
for (auto &i : ents) {
    ++i;
}
```

## [initializer lists](http://www.stroustrup.com/C++11FAQ.html#init-list)

```c++
/* C++98/03 */

// Keep pretending.
vector<int> ents;

for (vector<int>::iterator iter = ents.begin(); iter != ents.end(); ++iter) {
    ++(*iter);
}
```
```c++
/* C++11 */

// finally!
vector<int> ents = { 1, 2, 3, 4 };

for (auto &i : ents) {
    ++i;
}

// Some more cool initializer list stuff
map<set<string>, vector<string>> tldr = {
    { {"this", "is", "cool"}, {"I", "know", "right"} },
    { {"anyways"}, {"giggity", "giggity", "giggity"} },
};
```

## [lambdas](http://www.stroustrup.com/C++11FAQ.html#lambda)

```c++
/* C++98/03 */
```
```c++
/* C++11 */

```

## [default and delete](http://www.stroustrup.com/C++11FAQ.html#default)

## [constructors](http://www.stroustrup.com/C++11FAQ.html#delegating-ctor)


## [member initialization](http://www.stroustrup.com/C++11FAQ.html#member-init)

## [nullptr](http://www.stroustrup.com/C++11FAQ.html#nullptr)

## [unique_ptr](http://www.stroustrup.com/C++11FAQ.html#std-unique_ptr)

I know that Java and C#, and probably others, have had these for a while, but it's still cool to see them in C++. And
to think, these are standard now; this is forever.
